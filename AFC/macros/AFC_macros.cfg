# Eject Loaded Lane
[gcode_macro BT_TOOL_UNLOAD]
description: Unload the currently loaded lane
gcode:
  TOOL_UNLOAD

[gcode_macro BT_CHANGE_TOOL]
description: Switch to a new lane by ejecting the previously loaded one
gcode:
  {% set lane_num = params.LANE|default(1)|int %}
  {% set stepper = printer['gcode_macro _AFC_GLOBAL_VARS'].stepper_name|string %}
  
  CHANGE_TOOL LANE={stepper ~ lane_num}

[gcode_macro BT_LANE_EJECT]
description: Fully eject the filament from the lane
gcode:
  {% set lane_num = params.LANE|default(1)|int %}
  {% set stepper = printer['gcode_macro _AFC_GLOBAL_VARS'].stepper_name|string %}
  
  LANE_UNLOAD LANE={stepper ~ lane_num}

[gcode_macro BT_LANE_MOVE]
description: Move the specified lane the specified amount
gcode:
  {% set lane_num = params.LANE|default(1)|int %}
  {% set dist = params.DISTANCE|default(20)|float %}
  {% set stepper = printer['gcode_macro _AFC_GLOBAL_VARS'].stepper_name|string %}

  LANE_MOVE LANE={stepper ~ lane_num} DISTANCE={dist}

[gcode_macro BT_RESUME]
description: Resume the print after an error
gcode:
    {% if not printer.pause_resume.is_paused %}
        RESPOND MSG="Print is not paused. Resume ignored"
    {% else %}
        AFC_RESUME
    {% endif %}
  
[gcode_macro BT_PREP]
description: Run the AFC PREP sequence
gcode:
  PREP

[gcode_macro BT_SET_RUNOUT_Lane1_to_2]
description: sets lane2 on Runouts
gcode:
  SET_RUNOUT LANE=lane1 RUNOUT=lane2

[gcode_macro BT_SET_RUNOUT_Lane2_to_1]
description: sets lane1 on Runouts
gcode:
  SET_RUNOUT LANE=lane2 RUNOUT=lane1

[gcode_macro BT_TEST_RUNOUT_SELECT]
description: test of runout selection
gcode: 
  {% set lane_num = params.LANE|default(1)|int %}
  {% set stepper = printer['gcode_macro _AFC_GLOBAL_VARS'].stepper_name|string %}

   SET_RUNOUT LANE={stepper ~ lane_num} RUNOUT={stepper ~ lane_numm}
  